#!/bin/sh

# set up JEUS_HOME.
if [ -z "$JEUS_HOME" ] ; then
   PRG="$0"
   progname=`basename "$0"`
   saveddir=`pwd`

   dirname_prg=`dirname "$PRG"`
   cd "$dirname_prg"

   while [ -h "$PRG" ] ; do
      ls=`ls -ld "$PRG"`
      link=`expr "$ls" : '.*-> \(.*\)$'`
      if expr "$link" : '/.*' > /dev/null; then
      PRG="$link"
      else
        PRG=`dirname "$PRG"`"/$link"
      fi
   done

   JEUS_HOME=`dirname "$PRG"`/..

   cd "$saveddir"

   JEUS_HOME=`cd "$JEUS_HOME" && pwd`

fi

# get the domain and server name
arguments=$*
until [ $# -eq 0 ];
do
    case "$1" in
        -domain )
            if [ -n "$2" ]
            then
                if [ `echo "$2" | cut -c 1-1` != "-" ]
                then
                    DOMAIN_NAME=$2
                    shift;
                fi
            fi
            ;;

        -server )
            if [ -n "$2" ]
            then
                if [ `echo "$2" | cut -c 1-1` != "-" ]
                then
                    SERVER_NAME=$2
                    shift;
                fi
            fi
            ;;
    esac
    shift;
done

# set JEUS properties
. "${JEUS_HOME}/bin/jeus.properties"

# check domains and find default domain name
num_domains=`ls -l ${JEUS_HOME}/domains/ | grep ^d | wc -l`

# set a domain name if only one domain directory exists
if [ ${num_domains} = "1" ]
then
    if [ -z "${DOMAIN_NAME}" ]
    then
        cd ${JEUS_HOME}/domains
        for f in *;
        do
            [ -d "${f}" ] && { DOMAIN_NAME=${f}; break; };
        done
        cd ${JEUS_HOME}/bin
    fi
fi

# set server-specific JEUS properties
if [ -f ${JEUS_HOME}/bin/${DOMAIN_NAME}.${SERVER_NAME}.properties ]
then
   . "${JEUS_HOME}/bin/${DOMAIN_NAME}.${SERVER_NAME}.properties"
fi

echo "***************************************************************"
echo "  - JEUS Home         : ${JEUS_HOME}                           "
echo "  - JEUS Base Port    : ${JEUS_BASEPORT}                       "
echo "  - Java Vendor       : ${JAVA_VENDOR}                         "
echo "  - Added Java Option : ${JAVA_ARGS}                           "
echo "***************************************************************"

# set boot parameter
BOOT_PARAMETER=$arguments

if [ ! -z "${JEUS_USERNAME}" ]
then
    BOOT_PARAMETER="-u ${JEUS_USERNAME} -p ${JEUS_PASSWORD} $arguments"
fi

# execute jeus with echo
set -x
"${JAVA_HOME}/bin/java" $VM_OPTION  $LAUNCHER_MEM                           \
    -classpath "${BOOTSTRAP_CLASSPATH}"                      \
    -Dsun.rmi.dgc.client.gcInterval=3600000                                 \
    -Dsun.rmi.dgc.server.gcInterval=3600000                                 \
    -Djava.library.path="${JEUS_LIBPATH}"                                   \
    -Djava.naming.factory.initial=jeus.jndi.JNSContextFactory               \
    -Djava.naming.factory.url.pkgs=jeus.jndi.jns.url                        \
    -Djava.net.preferIPv4Stack=true                                         \
    -Djava.util.logging.manager=jeus.util.logging.JeusLogManager            \
    -Djava.util.logging.config.file="${JEUS_HOME}/bin/logging.properties"   \
    -Djeus.home="${JEUS_HOME}"                                              \
    -Djeus.jvm.version=${VM_TYPE}                                           \
    -Djeus.tm.checkReg=true                                                 \
    -Djeus.properties.replicate=jeus,sun.rmi,java.util,java.net             \
    jeus.server.LauncherBootstrapper ${BOOT_PARAMETER}
